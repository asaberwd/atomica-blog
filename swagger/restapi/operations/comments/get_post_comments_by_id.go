// Code generated by go-swagger; DO NOT EDIT.

package comments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPostCommentsByIDHandlerFunc turns a function with the right signature into a get post comments by Id handler
type GetPostCommentsByIDHandlerFunc func(GetPostCommentsByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPostCommentsByIDHandlerFunc) Handle(params GetPostCommentsByIDParams) middleware.Responder {
	return fn(params)
}

// GetPostCommentsByIDHandler interface for that can handle valid get post comments by Id params
type GetPostCommentsByIDHandler interface {
	Handle(GetPostCommentsByIDParams) middleware.Responder
}

// NewGetPostCommentsByID creates a new http.Handler for the get post comments by Id operation
func NewGetPostCommentsByID(ctx *middleware.Context, handler GetPostCommentsByIDHandler) *GetPostCommentsByID {
	return &GetPostCommentsByID{Context: ctx, Handler: handler}
}

/*GetPostCommentsByID swagger:route GET /post/{postId}/comments comments getPostCommentsById

Get post comments by ID

Returns a list of post comments by its id

*/
type GetPostCommentsByID struct {
	Context *middleware.Context
	Handler GetPostCommentsByIDHandler
}

func (o *GetPostCommentsByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPostCommentsByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
