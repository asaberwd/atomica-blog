// Code generated by go-swagger; DO NOT EDIT.

package health_api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/asaberwd/atomica-blog/swagger/models"
)

// HealthCheckOKCode is the HTTP code returned for type HealthCheckOK
const HealthCheckOKCode int = 200

/*HealthCheckOK Success

swagger:response healthCheckOK
*/
type HealthCheckOK struct {
	/*Request ID

	 */
	XREQUESTID string `json:"X-REQUEST-ID"`

	/*
	  In: Body
	*/
	Payload *models.Health `json:"body,omitempty"`
}

// NewHealthCheckOK creates HealthCheckOK with default headers values
func NewHealthCheckOK() *HealthCheckOK {

	return &HealthCheckOK{}
}

// WithXREQUESTID adds the xREQUESTId to the health check o k response
func (o *HealthCheckOK) WithXREQUESTID(xREQUESTID string) *HealthCheckOK {
	o.XREQUESTID = xREQUESTID
	return o
}

// SetXREQUESTID sets the xREQUESTId to the health check o k response
func (o *HealthCheckOK) SetXREQUESTID(xREQUESTID string) {
	o.XREQUESTID = xREQUESTID
}

// WithPayload adds the payload to the health check o k response
func (o *HealthCheckOK) WithPayload(payload *models.Health) *HealthCheckOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health check o k response
func (o *HealthCheckOK) SetPayload(payload *models.Health) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthCheckOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-REQUEST-ID

	xREQUESTID := o.XREQUESTID
	if xREQUESTID != "" {
		rw.Header().Set("X-REQUEST-ID", xREQUESTID)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HealthCheckBadRequestCode is the HTTP code returned for type HealthCheckBadRequest
const HealthCheckBadRequestCode int = 400

/*HealthCheckBadRequest Invalid request

swagger:response healthCheckBadRequest
*/
type HealthCheckBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHealthCheckBadRequest creates HealthCheckBadRequest with default headers values
func NewHealthCheckBadRequest() *HealthCheckBadRequest {

	return &HealthCheckBadRequest{}
}

// WithPayload adds the payload to the health check bad request response
func (o *HealthCheckBadRequest) WithPayload(payload *models.Error) *HealthCheckBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health check bad request response
func (o *HealthCheckBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthCheckBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HealthCheckNotFoundCode is the HTTP code returned for type HealthCheckNotFound
const HealthCheckNotFoundCode int = 404

/*HealthCheckNotFound Not found.

swagger:response healthCheckNotFound
*/
type HealthCheckNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewHealthCheckNotFound creates HealthCheckNotFound with default headers values
func NewHealthCheckNotFound() *HealthCheckNotFound {

	return &HealthCheckNotFound{}
}

// WithPayload adds the payload to the health check not found response
func (o *HealthCheckNotFound) WithPayload(payload *models.Error) *HealthCheckNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health check not found response
func (o *HealthCheckNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthCheckNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// HealthCheckServiceUnavailableCode is the HTTP code returned for type HealthCheckServiceUnavailable
const HealthCheckServiceUnavailableCode int = 503

/*HealthCheckServiceUnavailable Service is Unavailable

swagger:response healthCheckServiceUnavailable
*/
type HealthCheckServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Health `json:"body,omitempty"`
}

// NewHealthCheckServiceUnavailable creates HealthCheckServiceUnavailable with default headers values
func NewHealthCheckServiceUnavailable() *HealthCheckServiceUnavailable {

	return &HealthCheckServiceUnavailable{}
}

// WithPayload adds the payload to the health check service unavailable response
func (o *HealthCheckServiceUnavailable) WithPayload(payload *models.Health) *HealthCheckServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the health check service unavailable response
func (o *HealthCheckServiceUnavailable) SetPayload(payload *models.Health) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *HealthCheckServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
